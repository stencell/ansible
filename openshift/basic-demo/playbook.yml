---
- name: deploy ec2 stuff for workshop
  hosts: localhost

  tasks:
    - name: deploy ec2 master instances
      ec2:
        key_name: nate-key
        instance_type: m4.xlarge
        image: ami-bd3f94c5
        wait: yes
        group: ['ocp_node', 'ocp_master']
        instance_tags:
            type: master-node
            Name: ocp-master-{{ student_id }}-1
            function: openshift
            kubernetes.io/cluster/{{ student_id }}: "{{ student_id }}"
        exact_count: 1
        count_tag: master-node
        vpc_subnet_id: subnet-7414a13c
        assign_public_ip: yes
        region: us-west-2
        volumes:
          - device_name: /dev/xvdb
            volume_type: gp2
            volume_size: 20
            delete_on_termination: true
      register: master_nodes
      when: ha is defined and ha | match("false")

    - name: deploy ec2 master instances in HA config
      ec2:
        key_name: nate-key
        instance_type: m4.xlarge
        image: ami-bd3f94c5
        wait: yes
        group: ['ocp_node', 'ocp_master']
        instance_tags:
            type: master-node
            Name: ocp-master-{{ student_id }}-{{ item }}
            function: openshift
            kubernetes.io/cluster/{{ student_id }}: "{{ student_id }}"
        count_tag: master-node
        vpc_subnet_id: subnet-7414a13c
        assign_public_ip: yes
        region: us-west-2
        volumes:
          - device_name: /dev/xvdb
            volume_type: gp2
            volume_size: 20
            delete_on_termination: true
      with_sequence: count=3
      register: master_nodes
      when: ha

    - name: deploy ec2 node instances
      ec2:
        key_name: nate-key
        instance_type: t2.xlarge
        image: ami-bd3f94c5
        wait: yes
        group: ['ocp_node', 'ocp_infranode']
        instance_tags:
            type: app-node
            Name: ocp-node-{{ student_id }}-{{ item }}
            function: openshift
            kubernetes.io/cluster/{{ student_id }}: "{{ student_id }}"
        count_tag: app-node
        vpc_subnet_id: subnet-7414a13c
        assign_public_ip: yes
        region: us-west-2
        volumes:
          - device_name: /dev/xvdb
            volume_type: gp2
            volume_size: 50
            delete_on_termination: true
      with_sequence: count={{ num_instances }}
      register: app_nodes

    - name: deploy ec2 infra instances in HA config
      ec2:
        key_name: nate-key
        instance_type: t2.xlarge
        image: ami-bd3f94c5
        wait: yes
        group: ['ocp_node', 'ocp_infranode']
        instance_tags:
            type: infra-node
            Name: ocp-infra-{{ student_id }}-{{ item }}
            function: openshift
            kubernetes.io/cluster/{{ student_id }}: "{{ student_id }}"
        count_tag: infra-node
        vpc_subnet_id: subnet-7414a13c
        assign_public_ip: yes
        region: us-west-2
        volumes:
          - device_name: /dev/xvdb
            volume_type: gp2
            volume_size: 50
            delete_on_termination: true
          - device_name: /dev/xvdc
            volume_type: gp2
            volume_size: 110
            delete_on_termination: true
      with_sequence: count=3
      register: infra_nodes
      when: ha

    # - debug:
    #     var: master_nodes
    #
    # - debug:
    #     var: app_nodes

    - name: create temp inventories - masters
      add_host:
        hostname: "{{ item.tags.Name }}.openshift.stencell.net"
        ansible_host: "{{ item.private_ip }}"
        groupname:
          - all_nodes
          - masters
      with_items: "{{ master_nodes.instances }}"
      when: not ha

    - name: create temp inventories - nodes
      add_host:
        hostname: "{{ item['instances'][0]['tags']['Name'] }}.openshift.stencell.net"
        ansible_host: "{{ item['instances'][0]['private_ip'] }}"
        groupname:
          - all_nodes
          - nodes
      with_items: "{{ app_nodes.results }}"

    - name: create temp inventories - master HA
      add_host:
        hostname: "{{ item['instances'][0]['tags']['Name'] }}.openshift.stencell.net"
        ansible_host: "{{ item['instances'][0]['private_ip'] }}"
        groupname:
          - all_nodes
          - masters
      with_items: "{{ master_nodes.results }}"
      when: ha

    - name: create temp inventories - infra HA
      add_host:
        hostname: "{{ item['instances'][0]['tags']['Name'] }}.openshift.stencell.net"
        ansible_host: "{{ item['instances'][0]['private_ip'] }}"
        groupname:
          - all_nodes
          - infra
      with_items: "{{ infra_nodes.results }}"
      when: ha

    #- debug:
    #    var: groups['masters']

    - name: update route53 for master
      route53:
        state: present
        zone: openshift.stencell.net
        record: "{{ item.tags.Name }}.openshift.stencell.net"
        value: "{{ item.private_ip }}"
        type: A
        ttl: 300
        overwrite: true
      with_items: "{{ master_nodes.instances }}"
      when: ha is defined and ha | match("false")

    - name: update route53 for nodes
      route53:
        state: present
        zone: openshift.stencell.net
        record: "{{ item['instances'][0]['tags']['Name'] }}.openshift.stencell.net"
        value: "{{ item['instances'][0]['private_ip'] }}"
        type: A
        ttl: 300
        overwrite: true
      with_items: "{{ app_nodes.results }}"

    - name: update route53 for masters - HA
      route53:
        state: present
        zone: openshift.stencell.net
        record: "{{ item['instances'][0]['tags']['Name'] }}.openshift.stencell.net"
        value: "{{ item['instances'][0]['private_ip'] }}"
        type: A
        ttl: 300
        overwrite: true
      with_items: "{{ master_nodes.results }}"
      when: ha

    - name: update route53 for infra - HA
      route53:
        state: present
        zone: openshift.stencell.net
        record: "{{ item['instances'][0]['tags']['Name'] }}.openshift.stencell.net"
        value: "{{ item['instances'][0]['private_ip'] }}"
        type: A
        ttl: 300
        overwrite: true
      with_items: "{{ infra_nodes.results }}"
      when: ha

    - name: wait for server to be available
      wait_for:
        host: "{{ item }}"
        state: started
        delay: 15
        timeout: 300
        port: 22
      with_items: "{{ groups.all_nodes }}"
      become: false
      delegate_to: localhost

- name: prep hosts
  hosts: all_nodes
  become: true
  user: ec2-user

  tasks:
    - import_tasks: ../register_rhn.yml

    - wait_for:
        timeout: 30
      delegate_to: localhost
      name: 30 extra seconds for instances to return

    - import_tasks: ../install_ocp_packages.yml

    - name: warm up docker images for cfme
      get_url:
        url: http://ocp-bastion.openshift.stencell.net/cfme/cfme-bundle.tar
        dest: /tmp/cfme-bundle.tar
      when: install_cfme

    - name: load cfme images
      shell: docker load -i /tmp/cfme-bundle.tar
      when: install_cfme

    - name: cleanup
      file:
        path: /tmp/cfme-bundle.tar
        state: absent
      when: install_cfme

- name: create openshift inventory file
  hosts: localhost

  tasks:
    - name: create openshift inventory file
      template:
        dest: ./{{ student_id }}-ocp-inventory
        src: ocp-inventory.j2
